SpringAop 采用代理模式实现。
为其他对象提供一种代理，以控制对这个对象的访问。代理对象在客服端和对象目标之间起到中介作用。属于结构性设计模式。

生活中的代理模式：房产中介、媒婆、黄牛党
适用场景：保护目标对象  增强目标对象

静态代理

CgLib 继承的方式 覆盖父类的方法
JDK采用实现的方式 必须要求代理的目标一定要实现一个接口
都是通过生成字节码，重组成一个新的类
JDK Proxy 对于用户而言，依赖性更强，调用也更复杂
CgLib 对目标类没有任何要求
CgLib 效率相对JDK更高，性能更高，底层没有用到反射
JDK Proxy生成的逻辑相对简单，效率相对较低，每次都要用反射，消耗性能、
CgLib 目标代理类不能有final修饰的方法，会忽略final修饰的方法
代理模式会造成系统设计中类的数目增加



